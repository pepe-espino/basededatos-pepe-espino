--------------------------------------------------------
----------------------EJERCICIO1------------------------

CREATE TABLE PEDIDOS
(
	ID_PEDIDO NUMBER(10),
	FECHA_PEDIDO DATE,
	TOTAL_PEDIDO NUMBER(10,2),
	CONSTRAINT PK_PEDIDOS PRIMARY KEY(ID_PEDIDO)
);

CREATE TABLE PRODUCTOS
(
	ID_PRODUCTO NUMBER(10),
	NOMBRE VARCHAR2(50),
	PRECIO NUMBER(10,2),
	STOCK NUMBER(10),
	CONSTRAINT PK_PRODUCTOS PRIMARY KEY(ID_PRODUCTO)
);

CREATE TABLE LINEAS_PEDIDO
(
	ID_LINEA NUMBER(10),
	ID_PEDIDO NUMBER(10),
	ID_PRODUCTO NUMBER(10),
	CANTIDAD NUMBER(10),
	CONSTRAINT PK_LINEA PRIMARY KEY(ID_LINEA),
	CONSTRAINT FK1_LINEA FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO),
	CONSTRAINT FK2_LINEA FOREIGN KEY(ID_PEDIDO) REFERENCES PEDIDOS(ID_PEDIDO)
);

INSERT INTO PEDIDOS p VALUES (1, SYSDATE, 50);
INSERT INTO PEDIDOS p VALUES (2, SYSDATE, 35.65);
INSERT INTO PEDIDOS p VALUES (3, SYSDATE, 79.99);

INSERT INTO PRODUCTOS p VALUES (1, 'ORDENADOR', 500.50, 15);
INSERT INTO PRODUCTOS p VALUES (2, 'MESA', 62.75, 25);
INSERT INTO PRODUCTOS p VALUES (3, 'RATÓN', 29.99, 56);
INSERT INTO PRODUCTOS p VALUES (4, 'TECLADO', 72, 60);
INSERT INTO PRODUCTOS p VALUES (5, 'MONITOR', 124.99, 18);

INSERT INTO LINEAS_PEDIDO lp VALUES(1, 1, 3, 4);
INSERT INTO LINEAS_PEDIDO lp VALUES(3, 3, 1, 1);

/*
DELETE FROM PEDIDOS p ;
DELETE FROM PRODUCTOS ;
DELETE FROM LINEAS_PEDIDO lp;

SELECT * FROM PEDIDOS p ;
SELECT * FROM PRODUCTOS p ;
SELECT * FROM LINEAS_PEDIDO lp ;
*/

CREATE OR REPLACE PROCEDURE PROCESAR_PEDIDO(P_ID_PEDIDO NUMBER)
IS 
	CURSOR C_PEDIDOS (P_PEDIDO NUMBER) IS 
	SELECT * FROM LINEAS_PEDIDO lp
	WHERE lp.ID_PEDIDO = P_PEDIDO;

	V_STOCK NUMBER(10);
BEGIN
	
	FOR V_FILA IN C_PEDIDOS(P_ID_PEDIDO) LOOP
		
		SELECT P.STOCK INTO V_STOCK FROM PRODUCTOS p 
		WHERE P.ID_PRODUCTO = V_FILA.ID_PRODUCTO;
		
		IF V_FILA.CANTIDAD < V_STOCK THEN
			UPDATE PRODUCTOS P SET P.STOCK = V_STOCK - V_FILA.CANTIDAD 
			WHERE P.ID_PRODUCTO = V_FILA.ID_PRODUCTO;
		ELSE
			RAISE_APPLICATION_ERROR(-20001, 'Stock insuficiente para el producto con ID: '||V_FILA.ID_PRODUCTO);
		END IF;
	END LOOP;
	
END;


--CASO DE PRUEBA 1--

--INSERT INTO PEDIDOS p VALUES(10, SYSDATE, 100);
--INSERT INTO LINEAS_PEDIDO lp VALUES (10, 10, 4, 10);

SELECT * FROM PRODUCTOS p WHERE p.ID_PRODUCTO = 4; 

BEGIN
	PROCESAR_PEDIDO(10);
END;

SELECT * FROM PRODUCTOS p WHERE P.ID_PRODUCTO = 4; --El producto con id 4 debe restar 10 de su cantidad--

--CASO DE PRUEBA 2 , SE INTRODUCE UN PEDIDO QUE NO EXISTE--

BEGIN
	PROCESAR_PEDIDO(54);
END;

--CASO DE PRUEBA 3 CANTIDAD MAS QUE STOCK--

--INSERT INTO LINEAS_PEDIDO lp VALUES(2, 2, 4, 100);


--DEBE SALTAR LA EXCEPCION YA QUE SE QUIERE OBTENER 100 DE UN PRODUCTO QUE SU STOCK ES MENOR
BEGIN
	PROCESAR_PEDIDO(2);
END;


----------------------------------------------
--------------EJERCICIO 2---------------------

-- creación de la tabla log_auditoria

CREATE TABLE LOG_AUDITORIA
(
	ID_LOG NUMBER(10),
	TABLA_AFECTADA VARCHAR2(25),
	OPERACION VARCHAR2(25),
	FECHA_EVENTO DATE,
	ID_PEDIDO NUMBER(10),
	CONSTRAINT PK_LOG_AUDITORIA PRIMARY KEY(ID_LOG),
	CONSTRAINT FK_LOG_AUD FOREIGN KEY(ID_PEDIDO) REFERENCES PEDIDOS(ID_PEDIDO)
);

CREATE SEQUENCE SQ_LOG
START WITH 0,
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER AUDITAR_PEDIDOS
AFTER INSERT OR DELETE OR UPDATE ON PEDIDOS
FOR EACH ROW 
BEGIN 
	
	IF INSERTING THEN
		
		INSERT INTO LOG_AUDITORIA la VALUES((SELECT COUNT(*)+1 FROM LOG_AUDITORIA), 'PEDIDOS', 'INSERT', SYSDATE, :NEW.ID_PEDIDO);
	
	ELSIF UPDATING THEN
	
		INSERT INTO LOG_AUDITORIA la VALUES((SELECT COUNT(*)+1 FROM LOG_AUDITORIA), 'PEDIDOS', 'INSERT', SYSDATE, :NEW.ID_PEDIDO); SET ID_LOG = :OLD.ID_PEDIDO, TABLA_AFECTADA = TABLA_AFECTADA , OPERACION = 'UPDATE', FECHA_EVENTO = SYSDATE, ID_PEDIDO = :OLD.ID_PEDIDO;   
		
	ELSE
	
		DELETE FROM LOG_AUDITORIA la WHERE LA.ID_PEDIDO = :OLD.ID_PEDIDO;
		
	END IF;
	
END;


INSERT INTO PEDIDOS p VALUES (4, SYSDATE, 134.99);
INSERT INTO PEDIDOS p VALUES (5, SYSDATE, 4.55);
INSERT INTO PEDIDOS p VALUES (8, SYSDATE, 79);
INSERT INTO PEDIDOS p VALUES (15, SYSDATE, 100);

SELECT * FROM PEDIDOS p;

UPDATE PEDIDOS P
SET TOTAL_PEDIDO = 200
WHERE P.ID_PEDIDO = 15;

SELECT * FROM LOG_AUDITORIA la ;


UPDATE PRODUCTOS 
SET NOMBRE = 'ORDENADOR SOBREMESA'
WHERE ID_PRODUCTO = 1;












